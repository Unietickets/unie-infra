name: Build Specific Service

on:
  workflow_dispatch:
    inputs:
      service:
        description: '–°–µ—Ä–≤–∏—Å –¥–ª—è —Å–±–æ—Ä–∫–∏'
        required: true
        type: choice
        options:
          - balance-service
          - smtp-service
          - unie
          - unie-admin
          - nginx
      environment:
        description: '–û–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Å–±–æ—Ä–∫–∏'
        required: true
        type: choice
        options:
          - development
          - production
        default: 'development'
      push_image:
        description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞–∑ –≤ Docker Hub'
        required: true
        type: boolean
        default: false

jobs:
  build-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: ${{ github.event.inputs.push_image == 'true' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set build target
        id: set-target
        run: |
          if [ "${{ github.event.inputs.service }}" == "balance-service" ]; then
            if [ "${{ github.event.inputs.environment }}" == "development" ]; then
              echo "BUILD_TARGET=development" >> $GITHUB_ENV
            else
              echo "BUILD_TARGET=production" >> $GITHUB_ENV
            fi
          else
            # –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ target'—ã
            echo "BUILD_TARGET=" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./services/${{ github.event.inputs.service }}
          push: ${{ github.event.inputs.push_image == 'true' }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/unie-${{ github.event.inputs.service }}:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/unie-${{ github.event.inputs.service }}:${{ github.sha }}
          build-args: |
            NODE_ENV=${{ github.event.inputs.environment }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            SHADOW_DATABASE_URL=${{ secrets.SHADOW_DATABASE_URL }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          target: ${{ env.BUILD_TARGET }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/unie-${{ github.event.inputs.service }}:buildcache
          cache-to: ${{ github.event.inputs.push_image == 'true' && format('type=registry,ref={0}/unie-{1}:buildcache,mode=max', secrets.DOCKER_HUB_USERNAME, github.event.inputs.service) || '' }}

      - name: Show build result
        run: |
          echo "‚úÖ –°–µ—Ä–≤–∏—Å ${{ github.event.inputs.service }} —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ${{ github.event.inputs.environment }}"
          if [ "${{ github.event.inputs.push_image }}" == "true" ]; then
            echo "üöÄ –û–±—Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Docker Hub: ${{ secrets.DOCKER_HUB_USERNAME }}/unie-${{ github.event.inputs.service }}:latest"
          fi
