# Загрузка всех переменных окружения из файла .env.development
env_file: ./.env.development

services:
  postgres:
    ports:
      - "${DATABASE_PORT}:5432"  # Открываем порт для доступа извне

  pgadmin:
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - app_network

  rabbitmq:
    ports:
      - "5672:5672"   # AMQP протокол
      - "15672:15672" # Веб-интерфейс управления
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-password}

  unie-service:
    build:
      context: ../services/unie
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ../services/unie:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    command: >  
      sh -c "
        echo 'Waiting for database...' &&
        while ! nc -z postgres 5432; do
          sleep 1
        done &&
        echo 'Database is up!' &&
        npx prisma generate &&
        npm run dev
      "

  balance-service:
    build:
      context: ../services/balance-service
      dockerfile: Dockerfile
      target: development
    volumes:
      - ../services/balance-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - rabbitmq
      
  smtp-service:
    build:
      context: ../services/smtp-service
      dockerfile: Dockerfile
    volumes:
      - ../services/smtp-service:/app
      - /app/node_modules
      - /app/dist
    command: >  
      sh -c "
        echo 'Waiting for database...' &&
        while ! nc -z postgres 5432; do
          sleep 1
        done &&
        echo 'Database is up!' &&
        npx prisma generate &&
        npm run start:dev
      "
    environment:
      - NODE_ENV=development
    ports:
      - "3002:3002"
